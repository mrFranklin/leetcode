class Solution {
public:
    int dx[4] = {-1, 0, 1, 0}, dy[4] = {0, 1, 0, -1};
    void dfs(int x, int y, vector<vector<char>>& board) {
        if (x < 0 || x >= board.size() || y < 0 || y >= board[0].size()) return;
        if (board[x][y] == 'X' || board[x][y] == '.') return;
        board[x][y] = '.';
        for (int i = 0; i < 4; i++) {
            dfs(x + dx[i], y + dy[i], board);
        }
    }

    void solve(vector<vector<char>>& board) {
        int n = board.size();
        if (n <= 0) return;
        int m = board[0].size();

        for (int i = 0; i < m; i++) {
            dfs(0, i, board);
            dfs(n - 1, i, board);
        }
        for (int i = 0; i < n; i++) {
            dfs(i, 0, board);
            dfs(i, m - 1, board);
        }

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (board[i][j] == 'O') board[i][j] = 'X';
                else if (board[i][j] == '.') board[i][j] = 'O';
            }
        }
    }
};
