class Solution {
public:
    int vowelPos(char c) {
        if (c == 'a') return 0;
        else if (c == 'e') return 1;
        else if (c == 'i') return 2;
        else if (c == 'o') return 3;
        else if (c == 'u') return 4;
        else return -1;
    }

    int findTheLongestSubstring(string s) {
        unordered_map <int, int> mp;
        mp[0] = -1;
        int res = 0;
        int state = 0;
        for (int i = 0; i < s.size(); i++) {
            int pos = vowelPos(s[i]);
            if (pos >= 0) {
                state ^= (1 << pos);
            };
            if (mp.count(state)) {
                res = max(res, i - mp[state]);
            } else {
                mp[state] = i;
            }
        }
        return res;
    }
};
