class Solution {
public:
    // mine
    string addBinary1(string a, string b) {
        reverse(a.begin(), a.end());
        reverse(b.begin(), b.end());
        int i = 0;
        int ined = 0;
        string s;
        while (i < a.size() && i < b.size()) {
            if (a[i] == '1' && b[i] == '1') {
                s.push_back('0' + ined);
                ined = 1;
            }
            else if (a[i] == '0' && b[i] == '0') {
                s.push_back('0' + ined);
                ined = 0;
            } else {
                s.push_back('1' - ined);
            }
            i++;
        }
        while (i < a.size()) {
            if (ined == 0) s.push_back(a[i]);
            else {
                if (a[i] == '1') {
                    s.push_back('0');
                } else {
                    s.push_back('1');
                    ined = 0;
                }
            }
            i++;
        }
        while (i < b.size()) {
            if (ined == 0) s.push_back(b[i]);
            else {
                if (b[i] == '1') {
                    s.push_back('0');
                } else {
                    s.push_back('1');
                    ined = 0;
                }
            }
            i++;
        }
        if (ined == 1) s.push_back('1');
        reverse(s.begin(), s.end());
        return s;
    }

    // from yxc
    string addBinary(string a, string b) {
        reverse(a.begin(), a.end());
        reverse(b.begin(), b.end());
        int t = 0;
        string res;
        for (int i = 0; i < a.size() || i < b.size(); i++) {
            int va = i >= a.size() ? 0 : a[i] - '0';
            int vb = i >= b.size() ? 0 : b[i] - '0';
            int s = va + vb + t;
            t = s / 2;
            s %= 2;
            res += to_string(s);
        }
        if (t) res += '1';
        return string(res.rbegin(), res.rend());
    }
};
