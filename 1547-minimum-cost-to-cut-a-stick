class Solution {
public:
    int minCost(int n, vector<int>& cuts) {
        sort(cuts.begin(), cuts.end());
        cuts.push_back(n);
        int size = cuts.size();
        vector<vector<int>> f(size + 1, vector<int>(size + 1));
        for (int len = 2; len <= size; len++) {
            for (int i = 1; i + len - 1 <= size; i++) {
                int j = i + len - 1;
                f[i][j] = INT_MAX;
                for (int k = i; k < j; k++) {
                    f[i][j] = min(f[i][j], f[i][k] + f[k + 1][j] + cuts[j - 1] - (i == 1 ? 0 : cuts[i - 2]));
                    // cout<<len<<" "<<i<<" "<<j<<" "<<k<<"   "<<f[i][j]<<endl;
                }
            }
        }
        return f[1][size];
    }
};
