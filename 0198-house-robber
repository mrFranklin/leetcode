class Solution {
public:
    int rob1(vector<int>& nums) {
        if (nums.size() == 0) return 0;
        int n = nums.size();
        vector<int> f(n + 1);
        f[0] = 0;
        f[1] = nums[0];
        for (int i = 2; i <= n; i++) {
            f[i] = max(f[i - 1], f[i - 2] + nums[i - 1]);
        }

        return f[n];
    }

    // 优化空间复杂度
    int rob(vector<int>& nums) {
        if (nums.size() == 0) return 0;
        else if (nums.size() == 1) return nums[0];
        int n = nums.size();
        int g = nums[0], f = max(nums[0], nums[1]);
        for (int i = 2; i < n; i++) {
            int tmp = f;
            f = max(f, g + nums[i]);
            g = tmp;
        }

        return f;
    }
};
