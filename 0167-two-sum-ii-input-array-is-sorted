class Solution {
public:
    vector<int> twoSum1(vector<int>& numbers, int target) {
        unordered_map<int, int> mp;
        for (int k = 0; k < numbers.size(); k++) {
            if (mp.count(target - numbers[k])) {
                return {mp[target - numbers[k]] + 1, k + 1};
            } else {
                mp[numbers[k]] = k;
            }
        }
        return {0, 0};
    }

    vector<int> twoSum(vector<int>& numbers, int target) {
        int l = 0, r = numbers.size() - 1;
        while (l < r) {
            int d = numbers[l] + numbers[r];
            if (d == target) return {l + 1, r + 1};
            else if (d < target) l++;
            else r--;
        }
        return {0, 0};
    }
};
