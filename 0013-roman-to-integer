class Solution {
public:
    int romanToInt(string s) {
        int n = s.size();
        unordered_map<char, int> m = {
            {'I', 1}, {'V', 5}, {'X', 10}, {'L', 50}, {'C', 100}, {'D', 500}, {'M', 1000}
        };
        int res = 0;
        for (int i = n - 1; i >= 0; i--) {
            res += m[s[i]];
            if ((s[i] == 'D' || s[i] == 'M') && i > 0 && s[i - 1] == 'C'
                || (s[i] == 'L' || s[i] == 'C') && i > 0 && s[i - 1] == 'X'
                || (s[i] == 'V' || s[i] == 'X') && i > 0 && s[i - 1] == 'I') {
                res -= m[s[i - 1]];
                i--;
            }
        }
        return res;
    }
};
