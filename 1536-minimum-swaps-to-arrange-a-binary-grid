class Solution {
public:
    int minSwaps(vector<vector<int>>& grid) {
        int n = grid.size();
        vector<int> vec(n);
        for (int i = 0; i < n; i++) {
            for (int j = n - 1; j > 0; j--) {
                if (grid[i][j] == 0) vec[i]++;
                else break;
            }
        }
        int res = 0;
        int row = 0;
        while (row < n) {
            bool found = false;
            for (int i = row; i < vec.size(); i++) {
                auto count = vec[i];
                if (count >= n - row - 1) {
                    for (int j = i; j > row; j--) {
                        vec[j] = vec[j - 1];
                    }
                    vec[row] = count;
                    found = true;
                    res += i - row;
                    break;
                };
            }
            if (!found) return -1;
            row++;
        }
        return res;
    }
};
