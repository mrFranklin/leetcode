class Solution {
public:
    unordered_map<char, int> dna = {
        {'A', 0}, {'C', 1}, {'G', 2}, {'T', 3}
    };
    vector<string> findRepeatedDnaSequences(string s) {
        int n = s.size();
        if (n < 10) return {};
        unordered_map<int, int> mp;
        vector<string> res;
        int h = 0;
        for (int i = 0; i < 10; i++) {
            h = (h << 2) + dna[s[i]];
        }
        mp[h]++;
        for (int i = 10; i < n; i++) {
            h = h % (1 << 18);
            h = (h << 2) + dna[s[i]];
            if (++mp[h] == 2) {
                res.push_back(s.substr(i - 10 + 1, 10));
            }
        }
        return res;
    }
};
