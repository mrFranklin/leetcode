class Solution {
public:
    // mine
    int numDecodings2(string s) {
        if (s.size() == 0) return 0;
        int n = s.size();
        vector<int> dp(n + 1, 1);
        if (s[0] == '0') dp[1] = 0;
        for (int i = 1; i < n; i++) {
            if (s[i] != '0') dp[i + 1] = dp[i]; 
            else dp[i + 1] = 0;
            int num = (s[i - 1] - '0') * 10 + (s[i] - '0');
            if (s[i - 1] != '0' && num >= 1 && num <= 26) dp[i + 1] += dp[i - 1];
        }
        return dp[n];
    }

    // from yxc
    int numDecodings(string s) {
        int n = s.size();
        vector<int> dp(n + 1);
        dp[0] = 1;
        for (int i = 1; i <= n; i++) {
            if (s[i - 1] != '0') dp[i] = dp[i - 1];
            if (i >= 2) {
                int t = (s[i - 2] - '0') * 10 + (s[i - 1] - '0');
                if (t >= 10 && t <= 26) dp[i] += dp[i - 2];
            }
            
        }
        return dp[n];
    }
};
