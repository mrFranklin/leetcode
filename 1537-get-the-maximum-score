class Solution {
public:
    int maxSum(vector<int>& nums1, vector<int>& nums2) {
        int N = 1000000007;
        int n = nums1.size(), m = nums2.size();
        vector<long long> f(n + 1), g(m + 1);
        f[0] = 0, g[0] = 0;
        int i = 0, j = 0;
        while (i < n && j < m) {
            if (nums1[i] < nums2[j]) {
                f[i + 1] = f[i] + nums1[i];
                i++;
            } else if (nums1[i] > nums2[j]) {
                g[j + 1] = g[j] + nums2[j];
                j++;
            } else {
                f[i + 1] = max(f[i], g[j]) + nums1[i];
                g[j + 1] = f[i + 1];
                i++, j++;
            }
        }
        while (i < n) {
            f[i + 1] = f[i] + nums1[i];
            i++;
        }
        while (j < m) {
            g[j + 1] = g[j] + nums2[j];
            j++;
        }
        return max(f[n], g[m]) % N;
    }
};
