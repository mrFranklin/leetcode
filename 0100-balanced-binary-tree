/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int height(TreeNode* root) {
        if (root == NULL) return 0;
        return 1 + max(height(root->left), height(root->right));
    }
    
    // O(N*logN)
    bool isBalanced1(TreeNode* root) {
        if (root == NULL) return true;

        if (!isBalanced(root->left) || !isBalanced(root->right)) return false;

        int lh = height(root->left);
        int rh = height(root->right);
        return abs(lh - rh) <= 1;
    }

    int dfs(TreeNode* root, bool& res) {
        if (!res) return -1;
        if (root == NULL) return 0;
        int left = dfs(root->left, res);
        int right = dfs(root->right, res);
        if (left == -1 || right == -1 || abs(left - right) > 1) {
            res = false;
            return -1;
        }
        return max(left, right) + 1;
    }

    // O(N)
    bool isBalanced(TreeNode* root) {
        bool res = true;
        dfs(root, res);
        return res;
    }
};
