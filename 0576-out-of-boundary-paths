class Solution {
public:
    int dx[4] = {-1, 0, 1, 0}, dy[4] = {0, 1, 0, -1};
    int findPaths(int m, int n, int N, int i, int j) {
        if (N == 0) return 0;
        int MOD = 1000000007;
        vector<vector<vector<int>>> f(N + 1, vector<vector<int>>(m, vector<int>(n)));
        for (int i = 0; i < n; i++) {
            f[0][0][i] += 1;
            f[0][m - 1][i] += 1;
        }
        for (int i = 0; i < m; i++) {
            f[0][i][0] += 1;
            f[0][i][n - 1] += 1;
        }
        for (int k = 1; k <= N; k++) {
            for (int i = 0; i < m; i++) {
                for (int j = 0; j < n; j++) {
                    for (int y = 0; y < 4; y++) {
                        int a = i + dx[y], b = j + dy[y];
                        if (a >= 0 && a < m && b >= 0 && b < n) {
                            f[k][i][j] = (f[k][i][j] + f[k - 1][a][b]) % MOD;
                        }
                    }
                }
            }
        }
        int res = 0;
        for (int k = 0; k < N; k++) {
            res = (res + f[k][i][j]) % MOD;
        }
        return res;
    }
};
