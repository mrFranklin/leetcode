/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        if (root == NULL) return {};
        
        vector<vector<int>> res;
        vector<TreeNode*> nodes;
        nodes.push_back(root);
        bool flag = true;
        while (!nodes.empty()) {
            vector<TreeNode *> tmp;
            res.push_back(vector<int>());
            for (int i = 0; i < nodes.size(); i++) {
                auto node = nodes[i];
                if (flag) {
                    res.back().push_back(node->val);
                }
                // cout<<node->val<<endl;
                if (node->left) tmp.push_back(node->left);
                if (node->right) tmp.push_back(node->right);
            }
            if (!flag) {
                for (int i = nodes.size() - 1; i >= 0; i--) {
                    res.back().push_back(nodes[i]->val);
                }
            }
            nodes = tmp;
            flag = !flag;
        }
        return res;
    }
};
