class Solution {
public:
    int calculateMinimumHP(vector<vector<int>>& dungeon) {
        int n = dungeon.size(), m = dungeon[0].size();
        vector<vector<int>> f(n, vector<int>(m));
        if (dungeon[n - 1][m - 1] <= 0) f[n - 1][m - 1] = abs(dungeon[n - 1][m - 1]) + 1;
        else f[n - 1][m - 1] = 1;
        for (int i = n - 1; i >= 0; i--) {
            for (int j = m - 1; j >= 0; j--) {
                if (i == n - 1 && j == m - 1) continue;
                int minn = INT_MAX;
                if (i < n - 1) {
                    minn = min(minn, f[i + 1][j]);
                }
                if (j < m - 1) {
                    minn = min(minn, f[i][j + 1]);
                }
                f[i][j] = max(minn - dungeon[i][j], 1);
            }
        }
        return f[0][0];
    }
};
