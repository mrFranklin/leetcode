class Solution {
public:
    // stack
    int minInsertions1(string s) {
        stack<char> st;
        int res = 0;
        for (int i = 0; i < s.size(); i++) {
            if (s[i] == '(') {
                st.push(s[i]);
            } else if (s[i] == ')') {
                if (st.empty()) res += 1;
                else {
                    st.pop();
                }
                if (i + 1 < s.size() && s[i + 1] != ')' || i == s.size() - 1) {
                    res += 1;
                } else {
                    i++;
                }
            }
        }
        return res + st.size() * 2;
    }

    // not using stack
    int minInsertions(string s) {
        int n = s.size();
        int res = 0;
        int right = 0;
        for (int i = n - 1; i >= 0; i--) {
            if (s[i] == ')') {
                if (i + 1 < n && s[i + 1] == '(' && right % 2 == 1) res += 1, right += 1;
                right++;
            } else {
                if (right < 2) {
                    res += 2 - right;
                    right = 0;
                } else {
                    right -= 2;
                }
            }
        }
        return res + (right + 1) / 2 + right % 2;
    }
};
