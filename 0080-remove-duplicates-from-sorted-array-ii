class Solution {
public:
    int removeDuplicates1(vector<int>& nums) {
        int n = nums.size();
        int i = 0, j = 0, len = n, count = 0;
        while (i < len) {
            if (i == 0 || nums[i] != nums[i - 1] || count < 2) {
                count = i > 0 && nums[i] != nums[i - 1] ? 1 : count + 1;
                i++;
            } else {
                count = 0;
                int k = i;
                while (k + 1 < len && nums[k] == nums[k + 1]) {
                    k++;
                }
                if (k + 1 == len) {
                    len = i;
                } else {
                    len -= k - i + 1;
                    for (int j = i; j < len; j++) {
                        nums[j] = nums[k + 1 + j - i];
                    }
                }
                // cout<<i<<" "<<len<<endl;
            }
        }
        return len;
    }

    // 一趟遍历
    int removeDuplicates(vector<int>& nums) {
        int n = nums.size();
        if (n == 0) return 0;
        int len = 1, count = 1;
        for (int i = 1; i < n; i++) {
            if (nums[i] == nums[i - 1]) {
                count++;
            } else {
                count = 1;
            }
            if (count <= 2) {
                nums[len++] = nums[i];
            }
        }
        return len;
    }
};
