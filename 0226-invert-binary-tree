/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    // 递归
    TreeNode* invertTree1(TreeNode* root) {
        if (root == NULL) {
            return root;
        }
        TreeNode* node = root->left;
        root->left = invertTree(root->right);
        root->right = invertTree(node);

        return root;
    }

    // 迭代，借助queue
    TreeNode* invertTree(TreeNode* root) {
        if (root == NULL) {
            return root;
        }
        queue<TreeNode*> q;
        q.push(root);
        while (!q.empty()) {
            TreeNode* node = q.front();
            q.pop();
            swap(node->left, node->right);
            if (node->left) {
                q.push(node->left);
            }
            if (node->right) {
                q.push(node->right);
            }
        }
        return root;
    }
};
