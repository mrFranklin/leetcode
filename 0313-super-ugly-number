class Solution {
public:
    int nthSuperUglyNumber(int n, vector<int>& primes) {
        if (n <= 0) return 0;
        int k = primes.size();
        vector<long> dp(n + 1);
        dp[1] = 1;
        vector<int> cnt(k, 1);
        for (int i = 2; i <= n; i++) {
            int minn = 0, op = primes[minn];
            for (int j = 1; j < k; j++) {
                if (op * dp[cnt[minn]] > primes[j] * dp[cnt[j]]) {
                    minn = j, op = primes[j];
                }
            }
            dp[i] = op * dp[cnt[minn]++];
            if (dp[i] == dp[i - 1]) i--;
        }
        return dp[n];
    }
};
